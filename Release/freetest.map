Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
                              ./source/main.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              ./source/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              ./source/main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

arr                 0xa               ./source/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
LOAD ./source/main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega32a.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x464
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.main
                0x0000000000000054       0xb6 ./source/main.o
                0x000000000000010a                . = ALIGN (0x2)
                0x000000000000010a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000010a        0x0 linker stubs
 *(.trampolines*)
                0x000000000000010a                __trampolines_end = .
 *(.progmem*)
                0x000000000000010a                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000010a                __ctors_start = .
 *(.ctors)
                0x000000000000010a                __ctors_end = .
                0x000000000000010a                __dtors_start = .
 *(.dtors)
                0x000000000000010a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000010a        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
                0x000000000000010a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000010a        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000116       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000116                __do_copy_data
 .init4         0x000000000000012c       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000012c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000013c        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
 *(.init9)
 *(.text)
 .text          0x0000000000000144        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
                0x0000000000000144                __vector_1
                0x0000000000000144                __vector_12
                0x0000000000000144                __bad_interrupt
                0x0000000000000144                __vector_6
                0x0000000000000144                __vector_3
                0x0000000000000144                __vector_11
                0x0000000000000144                __vector_13
                0x0000000000000144                __vector_17
                0x0000000000000144                __vector_19
                0x0000000000000144                __vector_7
                0x0000000000000144                __vector_5
                0x0000000000000144                __vector_4
                0x0000000000000144                __vector_9
                0x0000000000000144                __vector_2
                0x0000000000000144                __vector_15
                0x0000000000000144                __vector_8
                0x0000000000000144                __vector_14
                0x0000000000000144                __vector_10
                0x0000000000000144                __vector_16
                0x0000000000000144                __vector_18
                0x0000000000000144                __vector_20
 .text          0x0000000000000148        0x0 ./source/main.o
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000148        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000148                . = ALIGN (0x2)
 *(.text.*)
 .text.ioinit   0x0000000000000148       0x14 ./source/main.o
                0x0000000000000148                ioinit
 .text.USART_Init
                0x000000000000015c       0x10 ./source/main.o
                0x000000000000015c                USART_Init
 .text.USART_Transmit
                0x000000000000016c        0x8 ./source/main.o
                0x000000000000016c                USART_Transmit
 .text.USART_Receive
                0x0000000000000174        0x8 ./source/main.o
                0x0000000000000174                USART_Receive
 .text.pattern  0x000000000000017c       0x32 ./source/main.o
                0x000000000000017c                pattern
 .text.disp     0x00000000000001ae       0x60 ./source/main.o
                0x00000000000001ae                disp
 .text.startup.main
                0x000000000000020e      0x246 ./source/main.o
                0x000000000000020e                main
 .text.libgcc.mul
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000000454        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000000454        0xc /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
                0x0000000000000454                __tablejump2__
 .text.libgcc.prologue
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000460                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000460        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000460                exit
                0x0000000000000460                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000460        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000464                _etext = .

.data           0x0000000000800060      0x610 load address 0x0000000000000464
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
 .data          0x0000000000800060        0x0 ./source/main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.font     0x0000000000800060      0x5f0 ./source/main.o
                0x0000000000800060                font
 .data.selection
                0x0000000000800650       0x10 ./source/main.o
                0x0000000000800650                selection
 .data.layer    0x0000000000800660       0x10 ./source/main.o
                0x0000000000800660                layer
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800670                . = ALIGN (0x2)
                0x0000000000800670                _edata = .
                0x0000000000800670                PROVIDE (__data_end, .)

.bss            0x0000000000800670        0xb
                0x0000000000800670                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800670        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o
 .bss           0x0000000000800670        0x0 ./source/main.o
 .bss           0x0000000000800670        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800670        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800670        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800670        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Receive_Bit
                0x0000000000800670        0x1 ./source/main.o
                0x0000000000800670                Receive_Bit
 *(COMMON)
 COMMON         0x0000000000800671        0xa ./source/main.o
                0x0000000000800671                arr
                0x000000000080067b                PROVIDE (__bss_end, .)
                0x0000000000000464                __data_load_start = LOADADDR (.data)
                0x0000000000000a74                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080067b        0x0
                0x000000000080067b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080067b                PROVIDE (__noinit_end, .)
                0x000000000080067b                _end = .
                0x000000000080067b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./source/main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32a.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(freetest.elf elf32-avr)
LOAD linker stubs
